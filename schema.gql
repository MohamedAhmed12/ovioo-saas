# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""plans"""
type Plan {
  id: ID!
  title: String!
  description: String!
  services: [String!]!
  background_color: String
  daily_fees: Float
  monthly_fees: Float
  quarterly_fees: Float
  annual_fees: Float
  extra_twenty_hrs_fees: Float
  extra_forty_hrs_fees: Float
  monthly_credit_hours: Float
  daily_deducted_hours: Float
  is_full_time: Boolean
  is_most_popular: Boolean
  subscriptions: [OviooSubscription!]!
}

"""ovioo-subscriptions"""
type OviooSubscription {
  id: ID!
  total_credit_hours: Float!
  remaining_credit_hours: Float!
  extra_bundle_hours: Float
  team: Team!
  plan: Plan!
  start_at: DateTime!
  expire_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""notifications"""
type Notification {
  id: ID!
  content: String
  action: String
  is_read: Boolean
  created_at: DateTime!
  user: User!
  userId: ID!
}

"""profiles"""
type Profile {
  id: ID!
  company_name: String
  company_website: String
  business_info: String
  target_audience: String
  company_links: String
  push_notification_enabled: Boolean!
  mail_notification_enabled: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
  user: User!
}

"""users"""
type User {
  id: ID!
  fullname: String!
  email: String!
  avatar: String
  company: String
  phone: Int
  isActive: Boolean!
  provider: String!
  role: String
  created_at: DateTime!
  updated_at: DateTime!
  profile: Profile!
  team: Team!
  messages: [Message!]!
  notifications: [Notification!]!
  assignedTasks: [Task!]!
}

"""teams"""
type Team {
  id: ID!
  name: String
  owner_id: Float!
  members: [User!]!
  projects: [Project!]!
  tasks: [Task!]!
  subscriptions: [OviooSubscription!]!
}

"""project"""
type Project {
  id: ID!
  title: String!
  description: String!
  team: Team!
  tasks: [Task!]!
  assets: [Asset!]!
}

type task_types {
  id: ID!
  title: String
  info: [String!]
  extraInfo: String
  plan: String
}

"""tasks"""
type Task {
  id: ID!
  title: String!
  description: String
  status: String
  designer_fees: Float
  type: task_types!
  project: Project!
  team: Team!
  designer: User
  assets: [Asset!]!
  messages: [Message!]!
  unreadMessagesCount: Float
  subtasks: [Task!]!
  parent: Task!
}

"""message"""
type Message {
  id: ID!
  content: String
  voice_note_src: String
  status: String
  received_by: [String!]!
  read_by: [String!]!
  sender: User
  task: Task!
  asset: Asset
  created_at: DateTime!
  updated_at: DateTime!
}

"""asset"""
type Asset {
  id: ID!
  src: String!
  alt: String!
  type: String!
  project: Project
  task: Task!
  message: Message!
}

type TaskMsgsStatusChangedSubsResponseDto {
  status: String!
  fullname: String!
}

type ChangeUserStatusResponseDto {
  id: String!
  avatar: String
  fullname: String!
  isActive: Boolean!
}

"""task-types"""
input TaskType {
  id: ID!
  title: String
  info: [String!]
  extraInfo: String
  plan: String
}

type Query {
  getHello: String!
  me: User!
  findProfile: Profile!
  getTeam: Team!
  listTaskTypes: [task_types!]!
  listTasks: [Task!]!
  showTask(id: String!): Task!
  listAssets(id: String): [Asset!]!
  listProjects: [Project!]!
  showProject(id: String!): Project!
  listMessages(data: ListMessageDto!): [Message!]!
  listTaskUnreadMessages: [Task!]!
  listNotifications(data: ListNotificationsDto!): [Notification!]!
  listPlans: [Plan!]!
}

input ListMessageDto {
  task_id: String
  team_id: String
  page: Float!
  offsetPlus: Float
  limit: Float
}

input ListNotificationsDto {
  page: Float!
  offsetPlus: Float
  limit: Float
}

type Mutation {
  login(user: LoginDto!): User!
  register(user: RegisterDto!): User!
  forgetPassword(email: String!): Boolean!
  resetPassword(data: ResetPasswordDto!): Boolean!
  changePassword(data: ChangePasswordDto!): Boolean!
  updateUser(data: UpdateUserDto!): User!
  createMember(member: CreateMemberDto!): User!
  deleteMember(member: DeleteMemberDto!): Boolean!
  findOrCreateSsoUser(user: CreateSsoUserDto!): User!
  toggleUserStatus(isActive: Boolean!): Boolean!
  updateProfile(profile: UpdateProfileDto!): Profile!
  transferOwnership(id: String!): Boolean!
  createTask(data: CreateTaskDto!): Task!
  updateTask(data: UpdateTaskDto!): Task!
  deleteTask(id: String!): Boolean!
  createAssets(data: CreateAssetDto!): [Asset!]!
  deleteAsset(asset: DeleteAssetDto!): Boolean!
  downloadAsset(alt: String!): String!
  createProject(data: CreateProjectDto!): Project!
  updateProject(data: UpdateProjectDto!): Boolean!
  deleteProject(id: String!): Boolean!
  sendMessage(data: SendMessageDto!): Message!
  updateMessage(data: UpdateMessageDto!): Boolean!
  receiveAllSentMessages: Boolean!
  readTaskMessages(taskId: String!): Boolean!
  receiveTaskMessages(taskId: String!): Boolean!
  sendNotification(data: NotificationDto!): Notification!
  createSubscription(planId: String!): OviooSubscription!
}

input LoginDto {
  email: String!
  password: String!
}

input RegisterDto {
  email: String!
  password: String!
  fullname: String!
  password_confirmation: String!
  company: String
  phone: Float
  provider: String!
}

input ResetPasswordDto {
  password: String!
  password_confirmation: String!
  resetToken: String!
}

input ChangePasswordDto {
  password: String!
  password_confirmation: String!
  current_password: String!
}

input UpdateUserDto {
  avatar: String
  fullname: String
  phone: Float
  isActive: Boolean
}

input CreateMemberDto {
  email: String!
  fullname: String!
}

input DeleteMemberDto {
  id: String!
}

input CreateSsoUserDto {
  fullname: String
  email: String!
  avatar: String
  provider: String!
}

input UpdateProfileDto {
  id: String!
  company_name: String
  company_website: String
  business_info: String
  target_audience: String
  company_links: String
  push_notification_enabled: Boolean
  mail_notification_enabled: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input CreateTaskDto {
  title: String!
  status: String!
  project_id: String!
  type_id: String!
  parent_id: String
}

input UpdateTaskDto {
  id: String!
  title: String
  description: String
  status: String
  type: UpdateTaskRelatedEntityDto
  project: UpdateTaskRelatedEntityDto
}

input UpdateTaskRelatedEntityDto {
  id: String
}

input CreateAssetDto {
  assets: [AssetDto!]!
  task_id: String!
}

input AssetDto {
  src: String!
  alt: String!
  type: String!
}

input DeleteAssetDto {
  id: String
  alt: String!
}

input CreateProjectDto {
  title: String!
  description: String!
}

input UpdateProjectDto {
  title: String!
  description: String!
  id: String!
}

input SendMessageDto {
  task_id: String
  team_id: String
  content: String
  voice_note_src: String
  asset: AssetDto
  status: String
}

input UpdateMessageDto {
  id: String!
  status: String
}

input NotificationDto {
  id: String
  content: String
  is_read: Boolean
  action: String
  userId: String
  created_at: DateTime
}

type Subscription {
  userStatusChanged: ChangeUserStatusResponseDto!
  taskCreated: Task!
  taskUpdated(taskId: String!): Task!
  taskMsgsStatusChanged(teamId: String!): TaskMsgsStatusChangedSubsResponseDto!
  messageSent(data: MessageSentSubscriptionDto!): Message!
  notificationReceived(data: NotificationDto!): Notification!
}

input MessageSentSubscriptionDto {
  task_id: String
  team_id: String
}